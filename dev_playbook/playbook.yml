---
- hosts: dev
  become: yes

  # before running, make sure you install the prereq roles with: 
  # ansible-galaxy install --roles-path=roles --role-file=ansible_prereq_roles.yml --force
  #
  # then run with something like: 
  # ANSIBLE_CONFIG='.ansible.cfg' ansible-playbook playbook.yml -i inventory.ini

  pre_tasks:
    - name: Yummy Dev Tools
      yum: 
        enablerepo:
          - epel-release
          - powertools
        update_cache: yes 
        state: latest 
        name: "{{ item }}"
      with_items:
        - bash-completion
        - htop 
        - yum-utils 
        - "@Development Tools"
        - python39
        - libyaml-devel
        - python39-psycopg2
        - freetds
        - sassc
        - libyaml
        - libffi

    - name: Symlink python3 to python3.9
      alternatives: 
        name: python3
        path: /usr/bin/python3.9

    - name: Update pip and setuptools
      pip: 
        name: "{{ item }}"
        state: latest # ie: "pip3 install --upgrade"
      with_items: 
        - pip
        - setuptools

  roles:
    - role: avanov.pyenv
      pyenv_env: system
      pyenv_path: /usr/local/pyenv
      pyenv_owner: vagrant
      pyenv_python_versions: 
        - 3.8.13
        - 3.9.13
        - 3.10.4
      pyenv_global: 3.10.4
      pyenv_virtualenvs:
        - venv_name: latest
          py_version: 3.10.4

    - role: geerlingguy.memcached
    
    - role: geerlingguy.redis

    # would like to use ANXS.postgresql role, but their latest version in ansible-galaxy is outdated.
    # roles/sd.postgresql is our own extract of their repository...seems to work.
    - role: sd.postgresql
      postgresql_users: 
        - name: vagrant
          pass: vagrant
          encrypted: yes
          state: present
      postgresql_user_privileges:
        - name: vagrant
          role_attr_flags: SUPERUSER


    # system-wide rbenv for managing ruby versions
    - role: zzet.rbenv
      rbenv:
        env: system
        version: v1.2.0
        default_ruby: 3.1.2
        rubies:
          - version: 2.6.10
          - version: 2.7.6
          - version: 3.0.4
          - version: 3.1.2
      rbenv_clean_up: true
      rbenv_plugins: 
        - { name: "rbenv-vars",         repo: "https://github.com/rbenv/rbenv-vars.git",         version: "master" }
        - { name: "ruby-build",         repo: "https://github.com/rbenv/ruby-build.git",         version: "master" }
        - { name: "rbenv-default-gems", repo: "https://github.com/rbenv/rbenv-default-gems.git", version: "master" }
        - { name: "rbenv-installer",    repo: "https://github.com/rbenv/rbenv-installer.git",    version: "main" }
        - { name: "rbenv-update",       repo: "https://github.com/rkh/rbenv-update.git",         version: "master" }
        - { name: "rbenv-whatis",       repo: "https://github.com/rkh/rbenv-whatis.git",         version: "master" }
        - { name: "rbenv-use",          repo: "https://github.com/rkh/rbenv-use.git",            version: "master" }
        - { name: 'rbenv-bundle-exec',  repo: "https://github.com/maljub01/rbenv-bundle-exec",   version: "master" }
      rbenv_owner: root
      rbenv_group: vagrant

    # vagrant-user-only nvm for managing node(i can't make it work system-wide...not gonna fight it.)
    - role: stephdewit.nvm
      nvm_version: latest
      nvm_node_version: 17.6.0
      nvm_install_path: "/home/vagrant/.nvm"
      nvm_shell_init_file: "/home/vagrant/.bashrc"
      environment:
        NVM_DIR: "/home/vagrant/.nvm"

  tasks:

    - name: Symlink pg_config into /usr/bin
      alternatives: 
        name: pg_config
        link: /usr/bin/pg_config
        path: /usr/pgsql-13/bin/pg_config

    - name: Instal PG dev tools
      yum: 
        state: latest 
        name: postgresql13-devel

    - name: Update rbenv-bundle-exec plugin ~/.no_bundle_exec
      copy: 
        src: files/no_bundle_exec
        dest: /home/vagrant/.no_bundle_exec
        owner: vagrant
        group: vagrant
        mode: 0644 

    - name: Update nvm directory to ensure appropriate permissions
      file:
        path: "/home/vagrant/.nvm"
        state: directory
        recurse: yes
        owner: "vagrant"
        group: "vagrant"

    - name: Update nvm default-packages
      copy: 
        src: files/default-packages
        dest: /home/vagrant/.nvm/default-packages
        owner: vagrant
        group: vagrant
        mode: 0644 

  